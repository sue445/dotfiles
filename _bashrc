# Source global definitions
if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

# You may uncomment the following lines if you want `ls' to be colorized:
case "${OSTYPE}" in
darwin*)
  alias ll="ls -lG"
  ;;
linux*)
  alias ll='ls -l --color'
  ;;
esac

# Some more alias to avoid making mistakes:
# alias rm='rm -i'
# alias cp='cp -i'
# alias mv='mv -i'

alias be='bundle exec'
alias g='git'
alias gs='git status -sb'
alias h='hub'
alias re='rbenv'
alias t='tig'
alias ta='tig --all'
alias tm='(tmux list-sessions || tmux -u) && tmux -u a'
alias v='vim'
alias tf='terraform'
alias vg='vagrant'

# c.f. https://github.com/koic/dotfiles/blob/0e00d3b9d968963b5f54326ab3fb186336828895/dot.sh/git.sh#L2
alias cb='git checkout `git branch | peco | sed -e "s/\* //g" | awk "{print \$1}"`'

# ref. http://qiita.com/kawaz/items/92457e3d1664383b18bc
HISTTIMEFORMAT='%Y-%m-%dT%T%z '

function __show_errorcode() {
  ERR=$?

  if [ -n "$LEGACY_MODE" ] ; then
    if [ $ERR != 0 ]; then
      echo -en "x $ERR"
    else
      echo -en "o"
    fi
  else
    if [ $ERR != 0 ]; then
      echo -en "\033[31m✘ $ERR"
    else
      echo -en "\033[32m✓"
    fi
  fi
}
function __ps1_hostname() {
  local err=$?
  hostname
  exit $err
}
function __ps1_username() {
  local err=$?
  whoami
  exit $err
}

type _kube_ps1_get_context_ns > /dev/null 2>&1
if [ $? -eq 0 ]; then
  _kube_ps1_get_context_ns
fi

function __kube_ps1() {
  local err

  # c.f. https://github.com/jonmosco/kube-ps1
  type kube_ps1 > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    kube_ps1
  fi

  exit $err
}

source ~/dotfiles/vendor/bash_completion.d/git-prompt.sh
source ~/dotfiles/vendor/bash_completion.d/git-completion.bash
__git_complete g __git_main
GIT_PS1_SHOWDIRTYSTATE=true

if [ -f /usr/local/opt/kube-ps1/share/kube-ps1.sh ]; then
  # Install from `brew install kube-ps1`
  source /usr/local/opt/kube-ps1/share/kube-ps1.sh
fi

if [ -n "$LEGACY_MODE" ] ; then
  export PS1='
[$(__ps1_username)@$(__ps1_hostname)] $(__show_errorcode) \w$(__git_ps1)
[$(__ps1_username)@$(__ps1_hostname)] [$(date +"%m-%d %H:%M:%S")] $ '

else
  export PS1='
[$(__ps1_username)@$(__ps1_hostname)] $(__show_errorcode) \[\033[33m\]\w\[\033[31m\]$(__git_ps1)\[\033[00m\] $(__kube_ps1)
[$(__ps1_username)@$(__ps1_hostname)] \[\033[32m\][$(date +"%m-%d %H:%M:%S")]\[\033[0m\] $ '

fi


if [ -n "$RBENV_ROOT" -o -f "$HOME/.rbenv/shims/gem" ] ; then
  # via. http://rhysd.hatenablog.com/entry/20120226/1330265121
  function gem(){
    if [ -n "$RBENV_ROOT" ]; then
      $RBENV_ROOT/shims/gem $*
    else
      $HOME/.rbenv/shims/gem $*
    fi

    if [ "$1" = "install" ] || [ "$1" = "i" ] || [ "$1" = "uninstall" ] || [ "$1" = "uni" ]; then
      rbenv rehash
    fi
  }
fi

function repo(){
  if [ $(ghq list --full-path "$1" | wc -l) = "1" ]; then
    cd $(ghq list --full-path "$1")
  else
    cd $(ghq list --full-path "$1" | peco)
  fi
}

function bi-vendor() {
  type gnproc > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    # brew install coreutils
    local jobs=$(gnproc)
  else
    local jobs=$(nproc)
  fi

  if [ $(bundle -v | grep "Bundler version 1." | wc -l) = "1" ]; then
    # bundler v1
    bundle install --jobs $jobs --path vendor/bundle
  elif [ $(bundle -v | grep "Bundler version 2.0." | wc -l) = "1" ]; then
    # bundler v2.0.x
    bundle install --jobs $jobs --path vendor/bundle
  elif [ $(bundle -v | grep "Bundler version 2.1." | wc -l) = "1" ]; then
    # bundler v2.1+
    bundle config set --local path "vendor/bundle"
    bundle install --jobs $jobs
  else
    # bundler v2.2+
    bundle config set --local path "vendor/bundle"
    bundle config set --local jobs $jobs
    bundle install
  fi
}

# c.f. https://www.mazn.net/blog/2015/12/26/1548.html
function dockerhub-taglist {
  curl -s https://registry.hub.docker.com/v1/repositories/$1/tags | jq -r .[].name
}

#source ~/dotfiles/scripts/iterm_colorize_ssh.sh

export MAVEN_OPTS="-Djava.net.preferIPv4Stack=true"

HOME_DIR=$(cd ~/ && pwd)
export PATH="${HOME_DIR}/dotfiles/bin:${PATH}"

export DISABLE_SPRING=1

# Use ssh agent forwarding
#if [ -f ~/.ssh/id_rsa ]; then
#  ssh-add ~/.ssh/id_rsa 2>/dev/null
#fi

type direnv > /dev/null 2>&1
if [ $? -eq 0 ]; then
  eval "$(direnv hook bash)"
fi
